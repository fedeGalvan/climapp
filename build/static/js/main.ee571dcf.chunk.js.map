{"version":3,"sources":["services/api.js","components/Header.js","components/Weather.js","components/Footer.js","components/Loader.js","components/Main.js","App.js","index.js"],"names":["location","a","fetch","then","res","json","data","geo","timezone","split","join","slice","getWeather","url","weather","Header","currentLocation","useState","moment","format","currentDate","setCurrentDate","setInterval","class","id","Weather","currentTemp","kelvin","string","main","temp_max","temp_min","feels_like","humidity","temp","pressure","className","description","charAt","toUpperCase","src","icon","parseFloat","toFixed","sys","sunrise","sunset","wind","speed","Footer","href","target","Loader","Main","cod","App","setCurrentLocation","setCurrentTemp","useEffect","api","toLocaleLowerCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee571dcf.chunk.js","sourcesContent":["/* eslint-disable no-sequences */\r\nconst location = async () => {\r\n  const url = \"http://worldtimeapi.org/api/ip\";\r\n  const geo = await fetch(url)\r\n    .then((res) => res.json())\r\n    .then((data) => (data, { data }));\r\n\r\n  geo.data.timezone = geo.data.timezone\r\n    .split(\"/\")\r\n    .join(\" \")\r\n    .split(\" \")\r\n    .slice(2)\r\n    .join(\" \")\r\n    .split(\"_\")\r\n    .join(\" \");\r\n\r\n  return geo.data.timezone;\r\n};\r\n\r\nconst getWeather = async (data) => {\r\n  const url = `http://api.openweathermap.org/data/2.5/weather?q=${data}&lang=sp&appid=b34592baf7d04f61709f4b3c4e0db344`;\r\n  const weather = await fetch(url)\r\n    .then((res) => res.json())\r\n    .then((data) => (data, { data }));\r\n\r\n  return weather.data;\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { location, getWeather };\r\n","import React, { useState } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Header = ({ currentLocation }) => {\r\n  const [currentDate, setCurrentDate] = useState(moment().format(\"LTS\"));\r\n\r\n  setInterval(() => {\r\n    setCurrentDate(moment().format(\"LTS\"));\r\n  }, 1000);\r\n\r\n  return (\r\n    <>\r\n      <div class=\"columns is-desktop\" id=\"header\">\r\n        <div class=\"column bd-notification is-primary is-one-third\">\r\n          <h2>\r\n            {currentLocation === \"\"\r\n              ? \"Detectando localización..\"\r\n              : `Estás en: ${currentLocation}`}\r\n          </h2>\r\n        </div>\r\n        <div class=\"column is-one-third app\">\r\n          <h2>\r\n            CLIM<span>APP</span>\r\n          </h2>\r\n        </div>\r\n        <div class=\"column is-one-third\">\r\n          <h2>Hora Actual: {currentDate}</h2>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Weather = ({ currentTemp }) => {\r\n  const kelvin = 273.15;\r\n\r\n  function firstLetterToUpperCase(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  const {\r\n    temp_max,\r\n    temp_min,\r\n    feels_like,\r\n    humidity,\r\n    temp,\r\n    pressure,\r\n  } = currentTemp.main;\r\n\r\n  return (\r\n    <>\r\n      <div class=\"columns is-tablet\" id=\"weather\">\r\n        <div class=\"column is-three-fifths notification is-success is-light\">\r\n          <div class=\"column \">\r\n            <h2 className=\"subtitle\">Para ahora</h2>\r\n            <h1 className=\"actualWeather\">\r\n              <b>\r\n                {firstLetterToUpperCase(currentTemp.weather[0].description)}\r\n              </b>\r\n            </h1>\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${currentTemp.weather[0].icon}@2x.png`}\r\n            ></img>\r\n          </div>\r\n          <div>\r\n            <p>\r\n              Temperatura actual:{\" \"}\r\n              <b>{parseFloat(temp - kelvin, 10).toFixed(1)} &#8451;</b>\r\n            </p>\r\n            <p>\r\n              Sensación termica:{\" \"}\r\n              <b>{parseFloat(feels_like - kelvin, 10).toFixed(1)} &#8451;</b>{\" \"}\r\n            </p>\r\n            <p>\r\n              Humedad: <b>{humidity}%</b>\r\n            </p>\r\n            <p>\r\n              La presion actual es de <b>{pressure} hPa</b>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div class=\"column is-two-fifths notification  is-warning is-light\">\r\n          <div class=\"column\">\r\n            <h2 className=\"subtitle\">\r\n              <b>Información adicional</b>\r\n            </h2>\r\n            <br />\r\n            <p>\r\n              Hoy el sol saldrá a las:{\" \"}\r\n              <b>{moment(currentTemp.sys.sunrise * 1000).format(\"LT\")}</b>{\" \"}\r\n              <br />y a las{\" \"}\r\n              <b>{moment(currentTemp.sys.sunset * 1000).format(\"LT\")}</b> se\r\n              esconderá\r\n            </p>\r\n            <br />\r\n            <h2>\r\n              <b>Por otra parte..</b>\r\n            </h2>\r\n            <p>\r\n              La <b>temperatura máxima</b> actual:{\" \"}\r\n              <b>{parseFloat(temp_max - kelvin, 10).toFixed(1)} &#8451;</b>\r\n            </p>\r\n            <p>\r\n              {\" \"}\r\n              La <b>temperatura mínima</b> actual:{\" \"}\r\n              <b>{parseFloat(temp_min - kelvin, 10).toFixed(1)} &#8451;</b>\r\n            </p>\r\n            <p>\r\n              Los vientos soplan a:{\" \"}\r\n              <b>\r\n                {parseFloat(currentTemp.wind.speed * 3.6, 10).toFixed(1)} Km/H\r\n              </b>{\" \"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer class=\"footer\">\r\n      <p>Los resultados se actualizan automaticamente cada 5 minutos.</p>\r\n      <br />\r\n      <div class=\"content has-text-centered\">\r\n        <p>\r\n          Hecho con\r\n          <strong>❤️</strong> por{\" \"}\r\n          <a\r\n            href=\"https://www.linkedin.com/mwlite/in/federico-galv%C3%A1n-479b021a5\"\r\n            target=\"_blank\"\r\n          >\r\n            Federico Galvan\r\n          </a>\r\n          .\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <>\r\n      <div class=\"lds-ring\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport Weather from \"./Weather\";\r\nimport Footer from \"./Footer\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Main = ({ currentTemp }) => {\r\n  return (\r\n    <>\r\n      {currentTemp.cod !== 200 ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <div id=\"main\">\r\n            <div className=\"wrapper\">\r\n              <h1 className=\"title\">\r\n                Detectamos automáticamente tu localización <br /> y te mostramos\r\n                el clima.\r\n              </h1>\r\n              <h2 className=\"subtitle\">¡Es super rápido y sencillo!</h2>\r\n            </div>\r\n            <Weather currentTemp={currentTemp} />\r\n            <Footer />\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useEffect, useState } from \"react\";\nimport api from \"./services/api\";\n\nimport Header from \"../src/components/Header\";\nimport Main from \"../src/components/Main\";\n\nfunction App() {\n  const [currentLocation, setCurrentLocation] = useState(\"\");\n  const [currentTemp, setCurrentTemp] = useState(\"\");\n\n  useEffect(() => {\n    api.location().then((res) => setCurrentLocation(res));\n\n    api\n      .getWeather(currentLocation.toLocaleLowerCase())\n      .then((res) => setCurrentTemp(res));\n\n    setInterval(() => {\n      api\n        .getWeather(currentLocation.toLocaleLowerCase())\n        .then((res) => setCurrentTemp(res));\n    }, 360000);\n  }, [currentLocation]);\n\n  return (\n    <>\n      {currentLocation === \"\" && currentTemp === \"\" ? null : (\n        <>\n          <Header currentLocation={currentLocation} />\n          <Main currentTemp={currentTemp} />\n        </>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../src/sass/styles.scss\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}